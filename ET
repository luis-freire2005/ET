{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "productos = {'8475HD': ['HP', 15.6, '8GB', 'DD', '1T', 'Intel Core i5', 'Nvidia GTX1050'], \n",
    "'2175HD': ['lenovo', 14, '4GB', 'SSD', '512GB', 'Intel Core i5', 'Nvidia GTX1050'], \n",
    "'JjfFHD': ['Asus', 14, '16GB', 'SSD', '256GB', 'Intel Core i7', 'Nvidia RTX2080Ti'], \n",
    "'fgdxFHD': ['HP', 15.6, '8GB', 'DD', '1T', 'Intel Core i3', 'integrada'], \n",
    "'GF75HD': ['Asus', 15.6, '8GB', 'DD', '1T', 'Intel Core i7', 'Nvidia GTX1050'], \n",
    "'123FHD': ['lenovo', 14, '6GB', 'DD', '1T', 'AMD Ryzen 5', 'integrada'], \n",
    "'342FHD': ['lenovo', 15.6, '8GB', 'DD', '1T', 'AMD Ryzen 7', 'Nvidia GTX1050'], \n",
    "'UWU131HD': ['Dell', 15.6, '8GB', 'DD', '1T', 'AMD Ryzen 3', 'Nvidia GTX1050'], \n",
    "} \n",
    "\n",
    "\n",
    "stock = {'8475HD': [387990,10], '2175HD': [327990,4], 'JjfFHD': [424990,1], \n",
    "'fgdxFHD': [664990,21], '123FHD': [290890,32], '342FHD': [444990,7], \n",
    "'GF75HD': [749990,2], 'UWU131HD': [349990,1], 'FS1230HD': [249990,0],\n",
    "}  \n",
    "\n",
    "\n",
    "\n",
    "\n",
    "def stock_marca():\n",
    "    marca = input('ingrese la marca')\n",
    "    if marca in (productos):\n",
    "        print (stock[marca](1))\n",
    "    else:\n",
    "        print('no esta esta marca')\n",
    "\n",
    "\n",
    "\n",
    "def busqueda_precio():\n",
    "    precio = input('ingrese el producto que desee buscar')\n",
    "    marca = input('ingrese tu marca')\n",
    "    \n",
    "\n",
    "\n",
    "def actualizar_precio():\n",
    "    precio = input('ingrese un producto para actualizar el precio')\n",
    "    try:\n",
    "        if precio in stock:\n",
    "             marca_precio = input('ingrese una marca')\n",
    "             (stock[precio](1)) == marca_precio\n",
    "             print('precio actualizado')\n",
    "             op = input('')\n",
    "        if op == 'si' in 'no':\n",
    "         return\n",
    "        else:\n",
    "         print('opcion no valida')\n",
    "    except ValueError:\n",
    "        print('valor ingresado no es valido')\n",
    "\n",
    "            \n",
    "def menu ():\n",
    "    while True:\n",
    "        print('1. stock marca')\n",
    "        print('2. busqueda por precio')\n",
    "        print('3. actualizar precio')\n",
    "        print('4. salir')\n",
    "        opc = input('eliga una de las opciones disponibles')\n",
    "        if opc == '1':\n",
    "            stock_marca\n",
    "        elif opc == '2':\n",
    "            busqueda_precio\n",
    "        elif opc == '3':\n",
    "            actualizar_precio\n",
    "        elif opc == '4':\n",
    "            break\n",
    "        else:\n",
    "            print('opcion no valida')\n",
    "\n",
    "menu()\n",
    "            \n",
    "           \n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
